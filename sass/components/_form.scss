.form {

    &__group:not(:last-child) {
        margin-bottom: 2rem;
    }
    
    &__input {
        display: block;
        font-size: 1.5rem;
        font-family: inherit;
        color: inherit;
        width: 90%;
        padding: 1.5rem 2rem;
        background-color: rgba($color-white, .5);
        border-radius: 3px;
        border: none;
        border-bottom: 3px solid transparent;
        transition: all .3s;

        @include respond(tab-port) {
            width: 100%;
        }

        &:focus {
            outline: none;
            box-shadow: 0 1rem 2rem rgba($color-black, .1);
            border-bottom: 3px solid $color-primary;
        }

        &:focus:invalid {
            border-bottom: 3px solid $color-secondary-dark;
        }

        &::-webkit-input-placeholder {
            color: $color-grey-dark-2;
        }

        // Fix for Firefox red outline caused by 'required' html attribute
        &:required {
            box-shadow: none;
        }
    }

    &__label {
        // Moves label close to placeholder position, so it can get animated later making it looks to slide down out of input
        display: block;
        font-size: 1.2rem;
        font-weight: 700;
        margin-left: 2rem;
        margin-top: .7rem;
        transition: all .3s;
    }

    &__input:placeholder-shown + &__label {
        // Hides label when placeholder is shown
        opacity: 0;
        visibility: hidden;
        transform: translateY(-4rem);
    }

    &__radio-group {
        display: inline-block;
        width: 49%;

        @include respond(tab-port) {
            width: 100%;
            margin-bottom: 2rem;
        }
    }

    &__radio-input {
        display: none;
    }

    &__radio-label {
        position: relative;
        font-size: $default-font-size;
        padding-left: 4.5rem;
        cursor: pointer;
    }

    // checkbox 'hack'
    &__radio-button {
        position: absolute;
        display: inline-block;
        left: 0;
        top: -.4rem;
        height: 3rem;
        width: 3rem;
        border: 5px solid $color-primary;
        border-radius: 50%;

        &::after {
            @include absoluteCenter;
            
            content: "";
            display: block;
            height: 1.2rem;
            width: 1.2rem;
            border-radius: 50%;
            background-color: $color-primary;
            opacity: 0;
            transition: opacity .2s;
        }
    }

    // As soon as we hit the label element, radio becomes checked. Then we select sibling of that one, and then the child - because that's the one we want to manipulate each time that the radio input is selected
    &__radio-input:checked ~ &__radio-label &__radio-button::after {
        opacity: 1;
    }
}